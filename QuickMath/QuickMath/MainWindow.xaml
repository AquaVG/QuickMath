<Window x:Class="QuickMath.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="QuickMath"
        Height="600"
        Width="510"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanMinimize"
        Icon="C:\Users\Влад Головатюк\Desktop\Projects Visual Studio\QuickMath\QuickMath\QuickMath\bin\Debug\Resources\QuickMath.ico">
    <Grid>
        <Grid x:Name="MainGrid"
              Visibility="Hidden">
            <Grid.Resources>
                <Style TargetType="Label">
                    <Setter Property="HorizontalAlignment"
                            Value="Center" />
                    <Setter Property="FontSize"
                            Value="30" />
                    <Setter Property="FontFamily"
                            Value="Global User Interface" />
                    <Setter Property="Margin"
                            Value="0,15" />
                    <EventSetter Event="MouseEnter"
                                 Handler="Link_ChangeColor" />
                    <EventSetter Event="MouseLeave"
                                 Handler="Link_ChangeColor" />
                    <EventSetter Event="MouseDown"
                                 Handler="Link_Click" />
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Label Tag="Math"
                   Content="{DynamicResource m_math}"
                   VerticalAlignment="Bottom"
                   FontFamily="Global User Interface" />
            <Label Grid.Row="1"
                   Tag="Memory"
                   Content="{DynamicResource m_memory}"
                   VerticalAlignment="Top" />
        </Grid>
        <Grid Visibility="Visible"
              x:Name="MathGrid">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid Grid.Row="1"
                  Visibility="Visible"
                  x:Name="SecondaryMathGrid">
                <Grid.Resources>
                    <Style x:Key="FocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2"
                                               SnapsToDevicePixels="true"
                                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                               StrokeThickness="1"
                                               StrokeDashArray="1 2" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <SolidColorBrush x:Key="OptionMark.Static.Background"
                                     Color="#FFFFFFFF" />
                    <SolidColorBrush x:Key="OptionMark.Static.Border"
                                     Color="#FF707070" />
                    <Style x:Key="OptionMarkFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="14,0,0,0"
                                               SnapsToDevicePixels="true"
                                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                               StrokeThickness="1"
                                               StrokeDashArray="1 2" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <SolidColorBrush x:Key="OptionMark.MouseOver.Background"
                                     Color="#FFF3F9FF" />
                    <SolidColorBrush x:Key="OptionMark.MouseOver.Border"
                                     Color="#FF5593FF" />
                    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph"
                                     Color="#FF212121" />
                    <SolidColorBrush x:Key="OptionMark.Disabled.Background"
                                     Color="#FFE6E6E6" />
                    <SolidColorBrush x:Key="OptionMark.Disabled.Border"
                                     Color="#FFBCBCBC" />
                    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph"
                                     Color="#FF707070" />
                    <SolidColorBrush x:Key="OptionMark.Pressed.Background"
                                     Color="#FFD9ECFF" />
                    <SolidColorBrush x:Key="OptionMark.Pressed.Border"
                                     Color="#FF3C77DD" />
                    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph"
                                     Color="#FF212121" />
                    <SolidColorBrush x:Key="OptionMark.Static.Glyph"
                                     Color="#FF212121" />
                    <Style TargetType="{x:Type CheckBox}">
                        <Setter Property="FocusVisualStyle"
                                Value="{StaticResource FocusVisual}" />
                        <Setter Property="Background"
                                Value="{StaticResource OptionMark.Static.Background}" />
                        <Setter Property="BorderBrush"
                                Value="{StaticResource OptionMark.Static.Border}" />
                        <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        <Setter Property="BorderThickness"
                                Value="1" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type CheckBox}">
                                    <Grid x:Name="templateRoot"
                                          Background="Transparent"
                                          SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid VerticalAlignment="Center">
                                            <Border x:Name="checkBoxBorder"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    Margin="1"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                <Grid x:Name="markGrid"
                                                      VerticalAlignment="Center">
                                                    <Path x:Name="optionMark"
                                                          Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                                          Fill="{StaticResource OptionMark.Pressed.Glyph}"
                                                          Margin="5"
                                                          Opacity="0"
                                                          Stretch="Uniform" />
                                                    <Rectangle x:Name="indeterminateMark"
                                                               Fill="{StaticResource OptionMark.Static.Glyph}"
                                                               Margin="2"
                                                               Opacity="0" />
                                                </Grid>
                                            </Border>
                                        </Grid>
                                        <Grid VerticalAlignment="Center"
                                              Grid.Column="1">
                                            <ContentPresenter x:Name="contentPresenter"
                                                              Grid.Column="1"
                                                              Focusable="False"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              Margin="{TemplateBinding Padding}"
                                                              RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Grid>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasContent"
                                                 Value="true">
                                            <Setter Property="FocusVisualStyle"
                                                    Value="{StaticResource OptionMarkFocusVisual}" />
                                            <Setter Property="Padding"
                                                    Value="4,-1,0,0" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver"
                                                 Value="true">
                                            <Setter Property="Background"
                                                    TargetName="checkBoxBorder"
                                                    Value="{StaticResource OptionMark.MouseOver.Background}" />
                                            <Setter Property="BorderBrush"
                                                    TargetName="checkBoxBorder"
                                                    Value="{StaticResource OptionMark.MouseOver.Border}" />
                                            <Setter Property="Fill"
                                                    TargetName="optionMark"
                                                    Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                            <Setter Property="Fill"
                                                    TargetName="indeterminateMark"
                                                    Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled"
                                                 Value="false">
                                            <Setter Property="Background"
                                                    TargetName="checkBoxBorder"
                                                    Value="{StaticResource OptionMark.Disabled.Background}" />
                                            <Setter Property="BorderBrush"
                                                    TargetName="checkBoxBorder"
                                                    Value="{StaticResource OptionMark.Disabled.Border}" />
                                            <Setter Property="Fill"
                                                    TargetName="optionMark"
                                                    Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                            <Setter Property="Fill"
                                                    TargetName="indeterminateMark"
                                                    Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                        </Trigger>
                                        <Trigger Property="IsPressed"
                                                 Value="true">
                                            <Setter Property="Background"
                                                    TargetName="checkBoxBorder"
                                                    Value="{StaticResource OptionMark.Pressed.Background}" />
                                            <Setter Property="BorderBrush"
                                                    TargetName="checkBoxBorder"
                                                    Value="{StaticResource OptionMark.Pressed.Border}" />
                                            <Setter Property="Fill"
                                                    TargetName="optionMark"
                                                    Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                            <Setter Property="Fill"
                                                    TargetName="indeterminateMark"
                                                    Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                        </Trigger>
                                        <Trigger Property="IsChecked"
                                                 Value="true">
                                            <Setter Property="Opacity"
                                                    TargetName="optionMark"
                                                    Value="1" />
                                            <Setter Property="Opacity"
                                                    TargetName="indeterminateMark"
                                                    Value="0" />
                                        </Trigger>
                                        <Trigger Property="IsChecked"
                                                 Value="{x:Null}">
                                            <Setter Property="Opacity"
                                                    TargetName="optionMark"
                                                    Value="0" />
                                            <Setter Property="Opacity"
                                                    TargetName="indeterminateMark"
                                                    Value="1" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FontSize"
                                Value="23" />
                        <Setter Property="Margin"
                                Value="15,5" />
                        <Setter Property="HorizontalAlignment"
                                Value="Left" />
                    </Style>
                </Grid.Resources>
                <StackPanel Orientation="Vertical">
                    <Label Content="{DynamicResource math_help}"
                           HorizontalAlignment="Left"
                           Margin="10"
                           FontFamily="Global User Interface"
                           FontSize="24" />
                    <CheckBox x:Name="CheckB_Add"
                              IsChecked="True"
                              Content="{DynamicResource math_add}" />
                    <CheckBox x:Name="CheckB_Rem"
                              IsChecked="True"
                              Content="{DynamicResource math_rem}" />
                    <CheckBox x:Name="CheckB_Mult"
                              Content="{DynamicResource math_mult}" />
                    <CheckBox x:Name="CheckB_Div"
                              Content="{DynamicResource math_divide}" />
                </StackPanel>
                <Button Content="{DynamicResource btn_begin}"
                        FontSize="26"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Margin="70"
                        Padding="20,0"
                        FontFamily="Segoe UI Light"
                        Click="Button_Click" />
            </Grid>
            <Grid Visibility="Visible"
                  x:Name="MainMathGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1.5*" />
                    <RowDefinition Height="5*" />
                </Grid.RowDefinitions>
                <Label x:Name="Math_Timer"
                       Content="00:00"
                       FontFamily="Segoe UI"
                       FontSize="30"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Margin="30,0" />
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Label x:Name="Math_Expression"
                           FontSize="34"
                           Content="0+0"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                    <TextBox x:Name="UAnswer_Math"
                             VerticalAlignment="Center"
                             KeyUp="MathTextB_KeyUp"
                             Grid.Row="1"
                             Width="150"
                             FontSize="32"
                             HorizontalAlignment="Center"
                             VerticalContentAlignment="Center" />
                </Grid>
            </Grid>
        </Grid>
        <Grid Visibility="Hidden"
              x:Name="MemoryGrid">

        </Grid>
    </Grid>
</Window>
